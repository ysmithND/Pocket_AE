package com.digitallumens.pocketae.classes;

/**
 * Created by ysmith on 3/12/15.
 */
public class Travel {
    /* A Travel object will have an ID, name, type, project, from location, to location
        applicable dates and all expenses will be calculated, associated and stored with the object
    */
    private int mTripID;
    private String mName;
    private String mTripType;
    private Project mProjectList;
    private Location mFromLocation;
    private Location mToLocation;
    private Expenses mExpenses;
    private Weather mWeather;


    //need constructors here
    public Travel (String name, String type, Project project){
        mTripID = 0;
        mTripType = type;
        mProjectList = project;
        mExpenses = null;

    }
    public Travel (String name, String type){
        mTripID = 0;
        mTripType = type;
        mProjectList = null;
        mExpenses = null;

    }
    public int getTripID() {
        return mTripID;
    }

    public void setTripID(int tripID) {
        //need random number generator to setTripID
        mTripID = tripID;
    }
    public String getName() {
        return mName;
    }

    public void setName(String name) {
        mName = name;
    }

    public String getTripType() {
        /* this will get the trip type from the Activity. If the trip type is one of five values,
        take some specific action. Thinking this will be useful for the equipment take off checklist
         */
        return mTripType;
    }

    public void setTripType(String tripType) {
        mTripType = tripType;
    }

    public Project getProjectList() {
        return mProjectList;
    }

    public void setProjectList(Project projectList) {
        mProjectList = projectList;
    }

    public Location getFromLocation() {
        return mFromLocation;
    }

    public void setFromLocation(Location fromLocation) {
        mFromLocation = fromLocation;
    }

    public Location getToLocation() {
        return mToLocation;
    }

    public void setToLocation(Location toLocation) {
        mToLocation = toLocation;
    }

    public Expenses getExpenses() {
        return mExpenses;
    }

    public void setExpenses(Expenses expenses) {
        mExpenses = expenses;
    }

    public Weather getWeather() {
        return mWeather;
    }

    public void setWeather(Weather weather) {
        mWeather = weather;
    }
/* There's a really strong chance that all of this shit really belongs in the Activity (Controller)
and not in the classes (model)
 */
    //Create Trip
    public String createTrip(String name, String type, Project project, String from, String to){
    /* in this function, users will have the ability to build a new travel request. Need to figure
     out a good hook into Google Flights API here. Users should also have the option to send to
     Mavenlink API as well.
      */
        //1. Generate trip ID
        //2. Associate name
        //2. set trip type
        setTripType(type);
        //3. if Project is !null, need to have something to associate this to Project by name
        //4. Attach from and to locations
        Location fromLocation = new Location();
        fromLocation.setFromLocation(from);
        Location toLocation = new Location();
        toLocation.setToLocation(to);

        //5. Google Flights API
        //6. Prompt to add final
        String message = null;
        return message;
    }

    //Read Trip Details
    public Travel reviewTrips(User userID){
        /* find and show all trips generated by user by userID...will require a for each loop like:
        for each x in Travel, print trip's attributes if userID == X; There's probably an array in
        here somewhere
         */
        Travel trip = null;
        return trip;
    }
    //Update Trip Details
    public void updateTrip(Travel trip, String newName, String newType, Location newFromLocation,
                           Location newToLocation, Project newProject){
    /* Gets trip details using trip ID and prints out each attribute of the trip
     */

    //1. get trip attributes
        int id = trip.getTripID();
        String oldName = trip.getName();
        String oldType = trip.getTripType();
        Project oldProject = trip.getProjectList();
        Location oldFromLocation = trip.getFromLocation();
        Location oldToLocation = trip.getToLocation();
        Expenses oldExpenses = trip.getExpenses();

        Weather oldWeather = trip.getWeather();

     //2. have to figure out a way to prompt for set new values
        if (oldName != null && oldName != newName) {
            trip.setName(newName);
        }
        if (oldType != null && oldType != newType) {
            trip.setTripType(newType);
        }
        if (oldProject != null && oldProject != newProject) {
            trip.setProjectList(newProject);
        }
     //3. If either from or two locations change, we should recalculate
        if (oldFromLocation != newFromLocation) {
            //new functions to be written: update Weather, update Expenses
           trip.setFromLocation(newFromLocation);
        } else if (oldToLocation != newToLocation) {
            trip.setToLocation(newToLocation);
            Weather newWeather = new Weather(newToLocation);
            newWeather = newWeather.updateWeather(oldWeather, newToLocation);
            trip.setWeather(newWeather);
        }

        //4. Recalculate Expenses
    }
    //Delete Trip
    public void deleteTrip(int[] id){
        /*takes as input the trip ID, looks up that trip from the local store and then removes
        it from the local store. So, this will require an array of trip IDs
       */

    }
}
